{"mappings":"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","sources":["node_modules/ol/src/Observable.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/events/Event.js","node_modules/ol/src/functions.js","node_modules/ol/src/array.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/Object.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/util.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/asserts.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/math.js","node_modules/ol/src/Collection.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/extent.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/dom.js","node_modules/ol/src/has.js","node_modules/ol/src/transform.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/sphere.js","node_modules/ol/src/proj.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/View.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/layer/BaseImage.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/renderer/canvas/common.js","node_modules/ol/src/renderer/canvas/ImageLayer.js","node_modules/ol/src/layer/Image.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","node_modules/ol/src/source/OSM.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Image.js","node_modules/ol/src/source/Image.js","node_modules/ol/src/source/WMSServerType.js","node_modules/ol/src/uri.js","node_modules/ol/src/source/ImageWMS.js","node_modules/ol/src/string.js","node_modules/ol-layerswitcher/dist/ol-layerswitcher.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/Feature.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/format/GeoJSON.js","main.js"],"sourcesContent":["/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [opt_background] Background color.\n   */\n  setBackground(opt_background) {\n    this.background_ = opt_background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/render/Event~RenderEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/render/Event~RenderEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  !!(\n    ua.indexOf('version/15.4') >= 0 ||\n    ua.match(/cpu (os|iphone os) 15_4 like mac os x/)\n  );\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != SourceState.READY &&\n          sourceState != SourceState.UNDEFINED)\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [opt_disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(opt_disable) {\n  const hide = opt_disable === undefined ? true : opt_disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  This includes all API\n * methods except for those interacting with tile grids.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      // eslint-disable-next-line no-console\n      console.warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n      const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (opt_isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to contruct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {PluggableMap} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Please the `layer.getData()` method for {@link module:ol/layer/Tile~TileLayer#getData tile layers} or\n   * {@link module:ol/layer/Image~ImageLayer#getData image layers} instead of using this method.\n   *\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: In maps with more than one layer, this method will typically return pixel data\n   * representing the composed image of all layers visible at the given pixel – because layers\n   * will generally share the same rendering context.  To force layers to render separately, and\n   * to get pixel data representing only one layer at a time, you can assign each layer a unique\n   * `className` in its constructor.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer~Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   * @deprecated\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        state.layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const targetElement = this.getTargetElement();\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const defaultView = this.getOwnerDocument().defaultView;\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(defaultView, EventType.RESIZE, this.updateSize, this),\n      ];\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    /** @type {import(\"./renderer/Map.js\").default} */ (\n      this.renderer_\n    ).renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  const canvas = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  pixelContext = canvas.getContext('2d');\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../PluggableMap.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../PluggableMap.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   * @param {string} [opt_backgroundColor] Background color.\n   */\n  useContainer(target, transform, opacity, opt_backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      target.style.opacity === '' &&\n      opacity === 1 &&\n      (!opt_backgroundColor ||\n        (target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(opt_backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      if (opt_backgroundColor) {\n        style.backgroundColor = opt_backgroundColor;\n      }\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    const x = Math.round(renderPixel[0]);\n    const y = Math.round(renderPixel[1]);\n    let pixelContext = this.pixelContext_;\n    if (!pixelContext) {\n      const pixelCanvas = document.createElement('canvas');\n      pixelCanvas.width = 1;\n      pixelCanvas.height = 1;\n      pixelContext = pixelCanvas.getContext('2d');\n      this.pixelContext_ = pixelContext;\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n    let data;\n    try {\n      pixelContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        this.pixelContext_ = null;\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/common\n */\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n\n/**\n * Context options to enable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_ENABLED = {\n  imageSmoothingEnabled: true,\n  msImageSmoothingEnabled: true,\n};\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection)\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        let projection = viewState.projection;\n        if (!ENABLE_RASTER_REPROJECTION) {\n          const sourceProjection = imageSource.getProjection();\n          if (sourceProjection) {\n            projection = sourceProjection;\n          }\n        }\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image_ = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image_ = null;\n          }\n        }\n      } else {\n        this.image_ = null;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image_.getExtent();\n    const img = this.image_.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth)\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight)\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const size = frameState.size;\n    const scale =\n      (pixelRatio * imageResolution) / (viewResolution * imagePixelRatio);\n\n    let width = Math.round(size[0] * pixelRatio);\n    let height = Math.round(size[1] * pixelRatio);\n    const rotation = viewState.rotation;\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scale,\n      scale,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolution,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolution\n    );\n\n    this.renderedResolution = (imageResolution * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = context.globalAlpha;\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(\n        img,\n        0,\n        0,\n        +img.width,\n        +img.height,\n        Math.round(dx),\n        Math.round(dy),\n        Math.round(dw),\n        Math.round(dh)\n      );\n      if (opacity !== 1) {\n        context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './renderer/canvas/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n\n  if (!opt_interpolate) {\n    assign(context, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n\n  if (!opt_interpolate) {\n    assign(stitchContext, IMAGE_SMOOTHING_DISABLED);\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !opt_interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {boolean} [opt_interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!opt_interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {IMAGE_SMOOTHING_DISABLED, IMAGE_SMOOTHING_ENABLED} from './common.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (!(tile instanceof ImageTile || tile instanceof ReprojTile)) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      return this.getImageData(tile.getImage(), col, row);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      assign(context, IMAGE_SMOOTHING_DISABLED);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    assign(context, IMAGE_SMOOTHING_ENABLED);\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    if (!this.tileGrid) {\n      return null;\n    }\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.getInterpolate()\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [opt_options] Open Street Map options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {getCenter, getHeight, getIntersection, getWidth} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate\n  ) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(\n      sourceExtent,\n      sourceResolution,\n      pixelRatio\n    );\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          function (e) {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n          this\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_)\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Image\n */\nimport Event from '../events/Event.js';\nimport ImageState from '../ImageState.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {abstract} from '../util.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport {linearFindNearest} from '../array.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./State.js\").default} [state] State.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate: interpolate,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    if (this.resolutions_) {\n      const idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (\n          this.reprojectedRevision_ == this.getRevision() &&\n          equivalent(this.reprojectedImage_.getProjection(), projection) &&\n          this.reprojectedImage_.getResolution() == resolution &&\n          equals(this.reprojectedImage_.getExtent(), extent)\n        ) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection,\n        projection,\n        extent,\n        resolution,\n        pixelRatio,\n        function (extent, resolution, pixelRatio) {\n          return this.getImageInternal(\n            extent,\n            resolution,\n            pixelRatio,\n            sourceProjection\n          );\n        }.bind(this),\n        this.getInterpolate()\n      );\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  /**\n   * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n   * @api\n   */\n  CARMENTA_SERVER: 'carmentaserver',\n  /**\n   * HiDPI support for [GeoServer](https://geoserver.org/)\n   * @api\n   */\n  GEOSERVER: 'geoserver',\n  /**\n   * HiDPI support for [MapServer](https://mapserver.org/)\n   * @api\n   */\n  MAPSERVER: 'mapserver',\n  /**\n   * HiDPI support for [QGIS](https://qgis.org/)\n   * @api\n   */\n  QGIS: 'qgis',\n};\n","/**\n * @module ol/uri\n */\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport ImageWrapper from '../Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport {appendParams} from '../uri.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {ceil, floor, round} from '../math.js';\nimport {compareVersions} from '../string.js';\nimport {\n  containsExtent,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {get as getProjection, transform} from '../proj.js';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 4;\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [imageSmoothing=true] Deprecated.  Use the `interpolate` option instead.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [opt_options] ImageWMS options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    let interpolate =\n      options.imageSmoothing !== undefined ? options.imageSmoothing : true;\n    if (options.interpolate !== undefined) {\n      interpolate = options.interpolate;\n    }\n\n    super({\n      attributions: options.attributions,\n      interpolate: interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ =\n      /** @type {import(\"./WMSServerType.js\").default|undefined} */ (\n        options.serverType\n      );\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(\n      coordinate,\n      resolution,\n      0,\n      GETFEATUREINFO_IMAGE_SIZE\n    );\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n    const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent,\n      GETFEATUREINFO_IMAGE_SIZE,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n    const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0, [\n      viewWidth,\n      viewHeight,\n    ]);\n    const requestWidth = ceil(\n      (this.ratio_ * getWidth(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestHeight = ceil(\n      (this.ratio_ * getHeight(extent)) / imageResolution,\n      DECIMALS\n    );\n    const requestExtent = getForViewAndSize(center, imageResolution, 0, [\n      requestWidth,\n      requestHeight,\n    ]);\n\n    const image = this.image_;\n    if (\n      image &&\n      this.renderedRevision_ == this.getRevision() &&\n      image.getResolution() == resolution &&\n      image.getPixelRatio() == pixelRatio &&\n      containsExtent(image.getExtent(), viewExtent)\n    ) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = round(\n      getWidth(requestExtent) / imageResolution,\n      DECIMALS\n    );\n    this.imageSize_[1] = round(\n      getHeight(requestExtent) / imageResolution,\n      DECIMALS\n    );\n\n    const url = this.getRequestUrl_(\n      requestExtent,\n      this.imageSize_,\n      pixelRatio,\n      projection,\n      params\n    );\n\n    this.image_ = new ImageWrapper(\n      requestExtent,\n      resolution,\n      pixelRatio,\n      url,\n      this.crossOrigin_,\n      this.imageLoadFunction_\n    );\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(\n      EventType.CHANGE,\n      this.handleImageChange.bind(this)\n    );\n\n    return this.image_;\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [opt_precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString =\n    opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('ol/control/Control'), require('ol/Observable'), require('ol/layer/Group')) :\n\ttypeof define === 'function' && define.amd ? define(['ol/control/Control', 'ol/Observable', 'ol/layer/Group'], factory) :\n\t(global.LayerSwitcher = factory(global.ol.control.Control,global.ol.Observable,global.ol.layer.Group));\n}(this, (function (Control,ol_Observable,LayerGroup) { 'use strict';\n\nControl = 'default' in Control ? Control['default'] : Control;\nLayerGroup = 'default' in LayerGroup ? LayerGroup['default'] : LayerGroup;\n\n/**\n * @protected\n */\nconst CSS_PREFIX = 'layer-switcher-';\n/**\n * OpenLayers LayerSwitcher Control, displays a list of layers and groups\n * associated with a map which have a `title` property.\n *\n * To be shown in the LayerSwitcher panel layers must have a `title` property;\n * base map layers should have a `type` property set to `base`. Group layers\n * (`LayerGroup`) can be used to visually group layers together; a group\n * with a `fold` property set to either `'open'` or `'close'` will be displayed\n * with a toggle.\n *\n * See [BaseLayerOptions](#baselayeroptions) for a full list of LayerSwitcher\n * properties for layers (`TileLayer`, `ImageLayer`, `VectorTile` etc.) and\n * [GroupLayerOptions](#grouplayeroptions) for group layer (`LayerGroup`)\n * LayerSwitcher properties.\n *\n * Layer and group properties can either be set by adding extra properties\n * to their options when they are created or via their set method.\n *\n * Specify a `title` for a Layer by adding a `title` property to it's options object:\n * ```javascript\n * var lyr = new ol.layer.Tile({\n *   // Specify a title property which will be displayed by the layer switcher\n *   title: 'OpenStreetMap',\n *   visible: true,\n *   source: new ol.source.OSM()\n * })\n * ```\n *\n * Alternatively the properties can be set via the `set` method after a layer has been created:\n * ```javascript\n * var lyr = new ol.layer.Tile({\n *   visible: true,\n *   source: new ol.source.OSM()\n * })\n * // Specify a title property which will be displayed by the layer switcher\n * lyr.set('title', 'OpenStreetMap');\n * ```\n *\n * To create a LayerSwitcher and add it to a map, create a new instance then pass it to the map's [`addControl` method](https://openlayers.org/en/latest/apidoc/module-ol_Map-Map.html#addControl).\n * ```javascript\n * var layerSwitcher = new LayerSwitcher({\n *   reverse: true,\n *   groupSelectStyle: 'group'\n * });\n * map.addControl(layerSwitcher);\n * ```\n *\n * @constructor\n * @extends {ol/control/Control~Control}\n * @param opt_options LayerSwitcher options, see  [LayerSwitcher Options](#options) and [RenderOptions](#renderoptions) which LayerSwitcher `Options` extends for more details.\n */\nclass LayerSwitcher extends Control {\n    constructor(opt_options) {\n        const options = Object.assign({}, opt_options);\n        const element = document.createElement('div');\n        super({ element: element, target: options.target });\n        this.activationMode = options.activationMode || 'mouseover';\n        this.startActive = options.startActive === true;\n        // TODO Next: Rename to showButtonContent\n        this.label = options.label !== undefined ? options.label : '';\n        // TODO Next: Rename to hideButtonContent\n        this.collapseLabel =\n            options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n        // TODO Next: Rename to showButtonTitle\n        this.tipLabel = options.tipLabel ? options.tipLabel : 'Legend';\n        // TODO Next: Rename to hideButtonTitle\n        this.collapseTipLabel = options.collapseTipLabel\n            ? options.collapseTipLabel\n            : 'Collapse legend';\n        this.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n        this.reverse = options.reverse !== false;\n        this.mapListeners = [];\n        this.hiddenClassName = 'ol-unselectable ol-control layer-switcher';\n        if (LayerSwitcher.isTouchDevice_()) {\n            this.hiddenClassName += ' touch';\n        }\n        this.shownClassName = 'shown';\n        element.className = this.hiddenClassName;\n        this.button = document.createElement('button');\n        element.appendChild(this.button);\n        this.panel = document.createElement('div');\n        this.panel.className = 'panel';\n        element.appendChild(this.panel);\n        LayerSwitcher.enableTouchScroll_(this.panel);\n        element.classList.add(CSS_PREFIX + 'group-select-style-' + this.groupSelectStyle);\n        element.classList.add(CSS_PREFIX + 'activation-mode-' + this.activationMode);\n        if (this.activationMode === 'click') {\n            // TODO Next: Remove in favour of layer-switcher-activation-mode-click\n            element.classList.add('activationModeClick');\n            this.button.onclick = (e) => {\n                const evt = e || window.event;\n                if (this.element.classList.contains(this.shownClassName)) {\n                    this.hidePanel();\n                }\n                else {\n                    this.showPanel();\n                }\n                evt.preventDefault();\n            };\n        }\n        else {\n            this.button.onmouseover = () => {\n                this.showPanel();\n            };\n            this.button.onclick = (e) => {\n                const evt = e || window.event;\n                this.showPanel();\n                evt.preventDefault();\n            };\n            this.panel.onmouseout = (evt) => {\n                if (!this.panel.contains(evt.relatedTarget)) {\n                    this.hidePanel();\n                }\n            };\n        }\n        this.updateButton();\n    }\n    /**\n     * Set the map instance the control is associated with.\n     * @param map The map instance.\n     */\n    setMap(map) {\n        // Clean up listeners associated with the previous map\n        for (let i = 0; i < this.mapListeners.length; i++) {\n            ol_Observable.unByKey(this.mapListeners[i]);\n        }\n        this.mapListeners.length = 0;\n        // Wire up listeners etc. and store reference to new map\n        super.setMap(map);\n        if (map) {\n            if (this.startActive) {\n                this.showPanel();\n            }\n            else {\n                this.renderPanel();\n            }\n            if (this.activationMode !== 'click') {\n                this.mapListeners.push(map.on('pointerdown', () => {\n                    this.hidePanel();\n                }));\n            }\n        }\n    }\n    /**\n     * Show the layer panel. Fires `'show'` event.\n     * @fires LayerSwitcher#show\n     */\n    showPanel() {\n        if (!this.element.classList.contains(this.shownClassName)) {\n            this.element.classList.add(this.shownClassName);\n            this.updateButton();\n            this.renderPanel();\n        }\n        /**\n         * Event triggered after the panel has been shown.\n         * Listen to the event via the `on` or `once` methods; for example:\n         * ```js\n         * var layerSwitcher = new LayerSwitcher();\n         * map.addControl(layerSwitcher);\n         *\n         * layerSwitcher.on('show', evt => {\n         *   console.log('show', evt);\n         * });\n         * @event LayerSwitcher#show\n         */\n        this.dispatchEvent('show');\n    }\n    /**\n     * Hide the layer panel. Fires `'hide'` event.\n     * @fires LayerSwitcher#hide\n     */\n    hidePanel() {\n        if (this.element.classList.contains(this.shownClassName)) {\n            this.element.classList.remove(this.shownClassName);\n            this.updateButton();\n        }\n        /**\n         * Event triggered after the panel has been hidden.\n         * @event LayerSwitcher#hide\n         */\n        this.dispatchEvent('hide');\n    }\n    /**\n     * Update button text content and attributes based on current\n     * state\n     */\n    updateButton() {\n        if (this.element.classList.contains(this.shownClassName)) {\n            this.button.textContent = this.collapseLabel;\n            this.button.setAttribute('title', this.collapseTipLabel);\n            this.button.setAttribute('aria-label', this.collapseTipLabel);\n        }\n        else {\n            this.button.textContent = this.label;\n            this.button.setAttribute('title', this.tipLabel);\n            this.button.setAttribute('aria-label', this.tipLabel);\n        }\n    }\n    /**\n     * Re-draw the layer panel to represent the current state of the layers.\n     */\n    renderPanel() {\n        this.dispatchEvent('render');\n        LayerSwitcher.renderPanel(this.getMap(), this.panel, {\n            groupSelectStyle: this.groupSelectStyle,\n            reverse: this.reverse\n        });\n        this.dispatchEvent('rendercomplete');\n    }\n    /**\n     * **_[static]_** - Re-draw the layer panel to represent the current state of the layers.\n     * @param map The OpenLayers Map instance to render layers for\n     * @param panel The DOM Element into which the layer tree will be rendered\n     * @param options Options for panel, group, and layers\n     */\n    static renderPanel(map, panel, options) {\n        // Create the event.\n        const render_event = new Event('render');\n        // Dispatch the event.\n        panel.dispatchEvent(render_event);\n        options = options || {};\n        options.groupSelectStyle = LayerSwitcher.getGroupSelectStyle(options.groupSelectStyle);\n        LayerSwitcher.ensureTopVisibleBaseLayerShown(map, options.groupSelectStyle);\n        while (panel.firstChild) {\n            panel.removeChild(panel.firstChild);\n        }\n        // Reset indeterminate state for all layers and groups before\n        // applying based on groupSelectStyle\n        LayerSwitcher.forEachRecursive(map, function (l, _idx, _a) {\n            l.set('indeterminate', false);\n        });\n        if (options.groupSelectStyle === 'children' ||\n            options.groupSelectStyle === 'none') {\n            // Set visibile and indeterminate state of groups based on\n            // their children's visibility\n            LayerSwitcher.setGroupVisibility(map);\n        }\n        else if (options.groupSelectStyle === 'group') {\n            // Set child indetermiate state based on their parent's visibility\n            LayerSwitcher.setChildVisibility(map);\n        }\n        const ul = document.createElement('ul');\n        panel.appendChild(ul);\n        // passing two map arguments instead of lyr as we're passing the map as the root of the layers tree\n        LayerSwitcher.renderLayers_(map, map, ul, options, function render(_changedLyr) {\n            LayerSwitcher.renderPanel(map, panel, options);\n        });\n        // Create the event.\n        const rendercomplete_event = new Event('rendercomplete');\n        // Dispatch the event.\n        panel.dispatchEvent(rendercomplete_event);\n    }\n    /**\n     * **_[static]_** - Determine if a given layer group contains base layers\n     * @param grp Group to test\n     */\n    static isBaseGroup(grp) {\n        if (grp instanceof LayerGroup) {\n            const lyrs = grp.getLayers().getArray();\n            return lyrs.length && lyrs[0].get('type') === 'base';\n        }\n        else {\n            return false;\n        }\n    }\n    static setGroupVisibility(map) {\n        // Get a list of groups, with the deepest first\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n            return (l instanceof LayerGroup &&\n                !l.get('combine') &&\n                !LayerSwitcher.isBaseGroup(l));\n        }).reverse();\n        // console.log(groups.map(g => g.get('title')));\n        groups.forEach(function (grp) {\n            // TODO Can we use getLayersArray, is it public in the esm build?\n            const descendantVisibility = grp.getLayersArray().map(function (l) {\n                const state = l.getVisible();\n                // console.log('>', l.get('title'), state);\n                return state;\n            });\n            // console.log(descendantVisibility);\n            if (descendantVisibility.every(function (v) {\n                return v === true;\n            })) {\n                grp.setVisible(true);\n                grp.set('indeterminate', false);\n            }\n            else if (descendantVisibility.every(function (v) {\n                return v === false;\n            })) {\n                grp.setVisible(false);\n                grp.set('indeterminate', false);\n            }\n            else {\n                grp.setVisible(true);\n                grp.set('indeterminate', true);\n            }\n        });\n    }\n    static setChildVisibility(map) {\n        // console.log('setChildVisibility');\n        const groups = LayerSwitcher.getGroupsAndLayers(map, function (l) {\n            return (l instanceof LayerGroup &&\n                !l.get('combine') &&\n                !LayerSwitcher.isBaseGroup(l));\n        });\n        groups.forEach(function (grp) {\n            const group = grp;\n            // console.log(group.get('title'));\n            const groupVisible = group.getVisible();\n            const groupIndeterminate = group.get('indeterminate');\n            group\n                .getLayers()\n                .getArray()\n                .forEach(function (l) {\n                l.set('indeterminate', false);\n                if ((!groupVisible || groupIndeterminate) && l.getVisible()) {\n                    l.set('indeterminate', true);\n                }\n            });\n        });\n    }\n    /**\n     * Ensure only the top-most base layer is visible if more than one is visible.\n     * @param map The map instance.\n     * @param groupSelectStyle\n     * @protected\n     */\n    static ensureTopVisibleBaseLayerShown(map, groupSelectStyle) {\n        let lastVisibleBaseLyr;\n        LayerSwitcher.forEachRecursive(map, function (lyr, _idx, _arr) {\n            if (lyr.get('type') === 'base' && lyr.getVisible()) {\n                lastVisibleBaseLyr = lyr;\n            }\n        });\n        if (lastVisibleBaseLyr)\n            LayerSwitcher.setVisible_(map, lastVisibleBaseLyr, true, groupSelectStyle);\n    }\n    /**\n     * **_[static]_** - Get an Array of all layers and groups displayed by the LayerSwitcher (has a `'title'` property)\n     * contained by the specified map or layer group; optionally filtering via `filterFn`\n     * @param grp The map or layer group for which layers are found.\n     * @param filterFn Optional function used to filter the returned layers\n     */\n    static getGroupsAndLayers(grp, filterFn) {\n        const layers = [];\n        filterFn =\n            filterFn ||\n                function (_lyr, _idx, _arr) {\n                    return true;\n                };\n        LayerSwitcher.forEachRecursive(grp, function (lyr, idx, arr) {\n            if (lyr.get('title')) {\n                if (filterFn(lyr, idx, arr)) {\n                    layers.push(lyr);\n                }\n            }\n        });\n        return layers;\n    }\n    /**\n     * Toggle the visible state of a layer.\n     * Takes care of hiding other layers in the same exclusive group if the layer\n     * is toggle to visible.\n     * @protected\n     * @param map The map instance.\n     * @param lyr layer whose visibility will be toggled.\n     * @param visible Set whether the layer is shown\n     * @param groupSelectStyle\n     * @protected\n     */\n    static setVisible_(map, lyr, visible, groupSelectStyle) {\n        // console.log(lyr.get('title'), visible, groupSelectStyle);\n        lyr.setVisible(visible);\n        if (visible && lyr.get('type') === 'base') {\n            // Hide all other base layers regardless of grouping\n            LayerSwitcher.forEachRecursive(map, function (l, _idx, _arr) {\n                if (l != lyr && l.get('type') === 'base') {\n                    l.setVisible(false);\n                }\n            });\n        }\n        if (lyr instanceof LayerGroup &&\n            !lyr.get('combine') &&\n            groupSelectStyle === 'children') {\n            lyr.getLayers().forEach((l) => {\n                LayerSwitcher.setVisible_(map, l, lyr.getVisible(), groupSelectStyle);\n            });\n        }\n    }\n    /**\n     * Render all layers that are children of a group.\n     * @param map The map instance.\n     * @param lyr Layer to be rendered (should have a title property).\n     * @param idx Position in parent group list.\n     * @param options Options for groups and layers\n     * @protected\n     */\n    static renderLayer_(map, lyr, idx, options, render) {\n        const li = document.createElement('li');\n        const lyrTitle = lyr.get('title');\n        const checkboxId = LayerSwitcher.uuid();\n        const label = document.createElement('label');\n        if (lyr instanceof LayerGroup && !lyr.get('combine')) {\n            const isBaseGroup = LayerSwitcher.isBaseGroup(lyr);\n            li.classList.add('group');\n            if (isBaseGroup) {\n                li.classList.add(CSS_PREFIX + 'base-group');\n            }\n            // Group folding\n            if (lyr.get('fold')) {\n                li.classList.add(CSS_PREFIX + 'fold');\n                li.classList.add(CSS_PREFIX + lyr.get('fold'));\n                const btn = document.createElement('button');\n                btn.onclick = function (e) {\n                    const evt = e || window.event;\n                    LayerSwitcher.toggleFold_(lyr, li);\n                    evt.preventDefault();\n                };\n                li.appendChild(btn);\n            }\n            if (!isBaseGroup && options.groupSelectStyle != 'none') {\n                const input = document.createElement('input');\n                input.type = 'checkbox';\n                input.id = checkboxId;\n                input.checked = lyr.getVisible();\n                input.indeterminate = lyr.get('indeterminate');\n                input.onchange = function (e) {\n                    const target = e.target;\n                    LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\n                    render(lyr);\n                };\n                li.appendChild(input);\n                label.htmlFor = checkboxId;\n            }\n            label.innerHTML = lyrTitle;\n            li.appendChild(label);\n            const ul = document.createElement('ul');\n            li.appendChild(ul);\n            LayerSwitcher.renderLayers_(map, lyr, ul, options, render);\n        }\n        else {\n            li.className = 'layer';\n            const input = document.createElement('input');\n            if (lyr.get('type') === 'base') {\n                input.type = 'radio';\n            }\n            else {\n                input.type = 'checkbox';\n            }\n            input.id = checkboxId;\n            input.checked = lyr.get('visible');\n            input.indeterminate = lyr.get('indeterminate');\n            input.onchange = function (e) {\n                const target = e.target;\n                LayerSwitcher.setVisible_(map, lyr, target.checked, options.groupSelectStyle);\n                render(lyr);\n            };\n            li.appendChild(input);\n            label.htmlFor = checkboxId;\n            label.innerHTML = lyrTitle;\n            const rsl = map.getView().getResolution();\n            if (rsl >= lyr.getMaxResolution() || rsl < lyr.getMinResolution()) {\n                label.className += ' disabled';\n            }\n            else if (lyr.getMinZoom && lyr.getMaxZoom) {\n                const zoom = map.getView().getZoom();\n                if (zoom <= lyr.getMinZoom() || zoom > lyr.getMaxZoom()) {\n                    label.className += ' disabled';\n                }\n            }\n            li.appendChild(label);\n        }\n        return li;\n    }\n    /**\n     * Render all layers that are children of a group.\n     * @param map The map instance.\n     * @param lyr Group layer whose children will be rendered.\n     * @param elm DOM element that children will be appended to.\n     * @param options Options for groups and layers\n     * @protected\n     */\n    static renderLayers_(map, lyr, elm, options, render) {\n        let lyrs = lyr.getLayers().getArray().slice();\n        if (options.reverse)\n            lyrs = lyrs.reverse();\n        for (let i = 0, l; i < lyrs.length; i++) {\n            l = lyrs[i];\n            if (l.get('title')) {\n                elm.appendChild(LayerSwitcher.renderLayer_(map, l, i, options, render));\n            }\n        }\n    }\n    /**\n     * **_[static]_** - Call the supplied function for each layer in the passed layer group\n     * recursing nested groups.\n     * @param lyr The layer group to start iterating from.\n     * @param fn Callback which will be called for each layer\n     * found under `lyr`.\n     */\n    static forEachRecursive(lyr, fn) {\n        lyr.getLayers().forEach(function (lyr, idx, a) {\n            fn(lyr, idx, a);\n            if (lyr instanceof LayerGroup) {\n                LayerSwitcher.forEachRecursive(lyr, fn);\n            }\n        });\n    }\n    /**\n     * **_[static]_** - Generate a UUID\n     * Adapted from http://stackoverflow.com/a/2117523/526860\n     * @returns {String} UUID\n     */\n    static uuid() {\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n            const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n            return v.toString(16);\n        });\n    }\n    /**\n     * Apply workaround to enable scrolling of overflowing content within an\n     * element. Adapted from https://gist.github.com/chrismbarr/4107472\n     * @param elm Element on which to enable touch scrolling\n     * @protected\n     */\n    static enableTouchScroll_(elm) {\n        if (LayerSwitcher.isTouchDevice_()) {\n            let scrollStartPos = 0;\n            elm.addEventListener('touchstart', function (event) {\n                scrollStartPos = this.scrollTop + event.touches[0].pageY;\n            }, false);\n            elm.addEventListener('touchmove', function (event) {\n                this.scrollTop = scrollStartPos - event.touches[0].pageY;\n            }, false);\n        }\n    }\n    /**\n     * Determine if the current browser supports touch events. Adapted from\n     * https://gist.github.com/chrismbarr/4107472\n     * @returns {Boolean} True if client can have 'TouchEvent' event\n     * @protected\n     */\n    static isTouchDevice_() {\n        try {\n            document.createEvent('TouchEvent');\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    /**\n     * Fold/unfold layer group\n     * @param lyr Layer group to fold/unfold\n     * @param li List item containing layer group\n     * @protected\n     */\n    static toggleFold_(lyr, li) {\n        li.classList.remove(CSS_PREFIX + lyr.get('fold'));\n        lyr.set('fold', lyr.get('fold') === 'open' ? 'close' : 'open');\n        li.classList.add(CSS_PREFIX + lyr.get('fold'));\n    }\n    /**\n     * If a valid groupSelectStyle value is not provided then return the default\n     * @param groupSelectStyle The string to check for validity\n     * @returns The value groupSelectStyle, if valid, the default otherwise\n     * @protected\n     */\n    static getGroupSelectStyle(groupSelectStyle) {\n        return ['none', 'children', 'group'].indexOf(groupSelectStyle) >= 0\n            ? groupSelectStyle\n            : 'children';\n    }\n}\n// Expose LayerSwitcher as ol.control.LayerSwitcher if using a full build of\n// OpenLayers\nif (window['ol'] && window['ol']['control']) {\n    window['ol']['control']['LayerSwitcher'] = LayerSwitcher;\n}\n\nreturn LayerSwitcher;\n\n})));\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    return [size[0] / 2 - displacement[0], size[1] / 2 + displacement[1]];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import GeometryType from 'ol/geom/GeometryType';\n *  import {Circle, Fill, Stroke, Style} from 'ol/style';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n *\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n *\n *  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n *    styles[GeometryType.LINE_STRING]\n *  );\n *\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n *\n *  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n *    GeometryType.POLYGON\n *  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style/Style~Style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = horizontalTextAlign(\n      textIsArray ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    return [anchor[0] - displacement[0], anchor[1] + displacement[1]];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(\n      target,\n      canvasTransform,\n      layerState.opacity,\n      this.getBackground(frameState)\n    );\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features =\n        /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n    } else if (options.features) {\n      collection =\n        /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */ (\n          options.features\n        );\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = function (feature) {\n          this.removeFeatureInternal(feature);\n        }.bind(this);\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","import 'ol/ol.css';\r\nimport 'ol-layerswitcher/dist/ol-layerswitcher.css';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport {Image as ImageLayer, Tile as TileLayer} from 'ol/layer';\r\nimport OSM from 'ol/source/OSM';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport ImageWMS from 'ol/source/ImageWMS';\r\nimport LayerSwitcher from 'ol-layerswitcher';\r\nimport Group from 'ol/layer/Group';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\n\r\n\r\nvar base_maps = new Group({\r\n  'title': 'Base maps',\r\n  layers: [\r\n      new TileLayer({\r\n          title: 'Satellite',\r\n          type: 'base',\r\n          visible: true,\r\n          source: new XYZ({\r\n              attributions: ['Powered by Esri',\r\n                  'Source: Esri, DigitalGlobe, GeoEye, Earthstar Geographics, CNES/Airbus DS, USDA, USGS, AeroGRID, IGN, and the GIS User Community'\r\n              ],\r\n              attributionsCollapsible: false,\r\n              url: 'https://services.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n              maxZoom: 23\r\n          })\r\n      }),\r\n      \r\n        new TileLayer({\r\n            title: 'OSM',\r\n            type: 'base',\r\n            visible: true,\r\n            source: new OSM()\r\n        })\r\n\r\n\r\n  ]\r\n});\r\n\r\nvar ind_dist = new ImageLayer({\r\n  title: \"Depth\",\r\n  //extent: [-13884991, 2870341, -7455066, 6338219],\r\n  source: new ImageWMS({\r\n    url: 'http://localhost:8084/geoserver/wms',\r\n    params: {'LAYERS': 'Dem:Depth'},\r\n    ratio: 1,\r\n    serverType: 'geoserver',\r\n  })\r\n});\r\nvar overlays = new Group({\r\n  'title': 'Overlays',\r\n  layers: []\r\n});\r\n\r\noverlays.getLayers().push(ind_dist);\r\nvar view = new View({\r\n  center: [0, 0],\r\n  zoom: 2\r\n});\r\nvar map = new Map({\r\n  target: 'map',\r\n  view: view,\r\n  layers: [],\r\n  \r\n});\r\nmap.addLayer(base_maps);\r\nmap.addLayer(overlays);\r\nvar layerSwitcher = new LayerSwitcher({\r\n  activationMode: 'click',\r\n  startActive: true,\r\n  tipLabel: 'Layers', // Optional label for button\r\n  groupSelectStyle: 'children', // Can be 'children' [default], 'group' or 'none'\r\n  collapseTipLabel: 'Collapse layers',\r\n});\r\nmap.addControl(layerSwitcher);\r\nlayerSwitcher.renderPanel();\r\nvar vectorLayer = new VectorLayer({\r\n  title:'Rusle',\r\n // background: '#1a2b39',\r\n  source: new VectorSource({\r\n    url: 'http://localhost:8443/geoserver/Peace_proj/ows?service=WFS&version=1.0.0&request=GetFeature&typeName=Peace_proj%3Arusle_data&maxFeatures=1000000&outputFormat=application%2Fjson',\r\n    format: new GeoJSON(),\r\n  })\r\n});\r\noverlays.getLayers().push(vectorLayer);\r\nlayerSwitcher.renderPanel();\r\n\r\n\r\n"],"names":["$1f093ab5083c8a1f$var$Observable","_super","Observable","_this","call","this","on","onInternal","once","onceInternal","un","unInternal","revision_","$1f093ab5083c8a1f$var$__extends","prototype","changed","dispatchEvent","$3xzSb","default","CHANGE","getRevision","type","listener","Array","isArray","len","length","keys","i","$ilM9F","listen","key","listenOnce","ol_key","$1f093ab5083c8a1f$export$b7ef3f8527533384","ii","removeEventListener","$KD0eF","unlistenByKey","$1f093ab5083c8a1f$export$2e2bcd8739ae039","$08c28d22c0cb5a39$export$2e2bcd8739ae039","Target","opt_target","eventTarget_","pendingRemovals_","dispatching_","listeners_","$08c28d22c0cb5a39$var$__extends","addEventListener","listeners","listenersForType","indexOf","push","event","isString","evt","$f18Q2","target","propagate","dispatching","pendingRemovals","handleEvent","propagationStopped","pr","$6wUzV","VOID","disposeInternal","$gn0g3","clear","getListeners","undefined","hasListener","opt_type","Object","index","splice","$4kyFN","$3273ed08087da3da$export$2e2bcd8739ae039","Disposable","disposed","dispose","$aeedce20e9577100$export$2e2bcd8739ae039","BaseEvent","defaultPrevented","preventDefault","stopPropagation","$fVVyM","parcelRequire","$013a1733c226ec50$export$22e23a2304399231","$013a1733c226ec50$export$8f11cee4bdc7e668","$013a1733c226ec50$export$1cd1943b3a73bbe8","$013a1733c226ec50$export$ff83df6f9971435f","fn","lastResult","lastArgs","lastThis","called","nextArgs","slice","arguments","equals","apply","$b998d41b678ed5d1$export$2e0ae67339d5f1ac","haystack","needle","opt_comparator","mid","cmp","comparator","$b998d41b678ed5d1$export$4e734a3b32fb971b","low","high","found","a","b","$b998d41b678ed5d1$export$8a3786cc03fdb777","arr","direction","n","$b998d41b678ed5d1$export$292cfa960964f0e0","begin","end","tmp","$b998d41b678ed5d1$export$8b58be045bf06082","data","extension","$b998d41b678ed5d1$export$e9bab7fafb253603","arr1","arr2","len1","$b998d41b678ed5d1$export$efa610630f9e181","opt_func","opt_strict","compare","every","currentVal","res","$beaefe87199bb537$export$e6e34fd1f2686227","assign","var_sources","TypeError","output","source","hasOwnProperty","$beaefe87199bb537$export$42ffd38884aecdac","object","property","$beaefe87199bb537$export$a5c4301012ad6f07","values","$beaefe87199bb537$export$dd1bc94b04021eeb","$294047c5e65f31a3$export$2e2bcd8739ae039","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","TOUCHMOVE","WHEEL","$d5bf8abd656a3cdc$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","eventsKey","$d5bf8abd656a3cdc$export$8d2a95bc11b44725","$d5bf8abd656a3cdc$export$b0a21c8b3c1c921","$0b703156bb914e6f$export$2f5ff21d758d25a7","layer","$0b703156bb914e6f$var$__extends","$0b703156bb914e6f$var$Property","$0b703156bb914e6f$export$2e2bcd8739ae039","LayerGroup","opt_options","options","baseOptions","layers","layersListenerKeys_","listenerKeys_","addChangeListener","handleLayersChanged_","$cD8Qe","unique","$4Cz58","assert","getArray","setLayers","handleLayerChange_","forEach","getLayers","id","$1TIYs","ADD","handleLayersAdd_","REMOVE","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","$jXCUw","PROPERTYCHANGE","handleLayerGroupAdd_","handleLayerGroupRemove_","$9iPUS","getUid","collectionEvent","element","get","collection","currentLayers","set","getLayersArray","opt_array","array","getLayerStatesArray","opt_states","states","pos","ownLayerState","getLayerState","defaultZIndex","zIndex","layerState","opacity","visible","maxResolution","Math","min","minResolution","max","minZoom","maxZoom","extent","$9pD6L","getIntersection","getSourceState","$d8cxx","READY","$7xdj9","$57c5f0299cb9b82f$export$2e2bcd8739ae039","BaseLayer","background_","background","properties","$lbO8S","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","Infinity","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","className","setProperties","state_","$57c5f0299cb9b82f$var$__extends","getBackground","getClassName","opt_managed","state","managed","getZIndex","$9byFX","clamp","round","getOpacity","getVisible","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","abstract","EXTENT","setBackground","opt_background","setExtent","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$fFFY7","$b68b3d6e32e3074a$export$cf395d7c4a2d5a17","oldValue","$b68b3d6e32e3074a$var$__extends","$b68b3d6e32e3074a$export$2e2bcd8739ae039","BaseObject","opt_values","values_","value","getKeys","getProperties","hasProperties","notify","eventType","concat","removeChangeListener","opt_silent","applyProperties","unset","isEmpty","$2FcER","$e881b5dca21eb5d4$export$2e2bcd8739ae039","$6c5e11070e371322$export$817eb92a8194bab0","Error","$6c5e11070e371322$var$uidCounter_","$6c5e11070e371322$export$5e82334337e0f204","obj","ol_uid","String","$6c5e11070e371322$export$a4ad2735b021c132","$f6d1853b3fcae320$export$2e2bcd8739ae039","SOURCE","MAP","$5wMtC","$35d5ec884318008e$export$a7a9523472993e97","assertion","errorCode","$40658b5e833b516b$export$2e2bcd8739ae039","AssertionError","code","message","VERSION","split","name","$40658b5e833b516b$var$__extends","$6b000a049d919fe5$export$7d15b64cf5a3a4c4","$6b000a049d919fe5$export$2e2fd1ad24e4d350","cosh","x","y","exp","$6b000a049d919fe5$export$b9fae0bba9d9094d","log2","log","LOG2E","$6b000a049d919fe5$export$251bb0a9cef172e6","x1","y1","x2","y2","dx","dy","t","$6b000a049d919fe5$export$88e6ebb4fe54f538","$6b000a049d919fe5$export$8240f01c446270e6","mat","maxRow","maxEl","abs","r","absValue","j","coef","k","l","m","$6b000a049d919fe5$export$56cb859c01fa134d","angleInRadians","PI","$6b000a049d919fe5$export$cba01ba138429a1d","angleInDegrees","$6b000a049d919fe5$export$ba467bec01d66def","$6b000a049d919fe5$export$3a89f8d6f6bf6c9f","$6b000a049d919fe5$export$a81f732198733497","decimals","factor","pow","$6b000a049d919fe5$export$2077e0241d6afd3c","$6b000a049d919fe5$export$a3fe094919f356fd","floor","$6b000a049d919fe5$export$803ce6b71a0a94b2","ceil","$931ffc4e747c14db$var$Property","$931ffc4e747c14db$export$a87ae6eb2761ec6d","opt_element","opt_index","$931ffc4e747c14db$var$__extends","$931ffc4e747c14db$export$2e2bcd8739ae039","Collection","unique_","array_","assertUnique_","updateLength_","getLength","pop","extend","f","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$161dd067fe2d672c$export$2e2bcd8739ae039","$98f5bfe3c4864f05$export$2e2bcd8739ae039","UNDEFINED","LOADING","$43hY5","$6da4c8ed3074c92b$export$8aceca7c77505534","coordinates","$6da4c8ed3074c92b$export$fe201bb3bbe031e9","$6da4c8ed3074c92b$export$1f820e3920fa5715","$6da4c8ed3074c92b$export$ab1029bcae9ddb4a","opt_extent","$6da4c8ed3074c92b$export$9cd59f9826255e47","$6da4c8ed3074c92b$export$cbe64c389534206f","$6da4c8ed3074c92b$export$ac68c24d37ca240f","coordinate","$6da4c8ed3074c92b$export$805bdfd6d6690e97","$6da4c8ed3074c92b$export$be866b1e0809b17e","extent1","extent2","$6da4c8ed3074c92b$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","$iM9A6","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","$6da4c8ed3074c92b$export$958e3e1a02eac4b6","$6da4c8ed3074c92b$export$3e2152b047719fa1","$6da4c8ed3074c92b$export$4838bf78d04a9440","$6da4c8ed3074c92b$export$be0ab0bf96ca59ca","flatCoordinates","offset","stride","$6da4c8ed3074c92b$export$30570204156ffd18","$6da4c8ed3074c92b$export$e9bab7fafb253603","$6da4c8ed3074c92b$export$8b58be045bf06082","$6da4c8ed3074c92b$export$f1dab130b92b85a9","$6da4c8ed3074c92b$export$f9ed8a3d123a08e2","callback","val","$6da4c8ed3074c92b$export$8d09f5e2e1bf560d","$6da4c8ed3074c92b$export$e77c1cf70445e168","$6da4c8ed3074c92b$export$b84fa077c8b05295","$6da4c8ed3074c92b$export$cb1538b07e6964ff","$6da4c8ed3074c92b$export$520c40045967cb15","area","$6da4c8ed3074c92b$export$dd1bc94b04021eeb","$6da4c8ed3074c92b$export$3c49c185de0c2bfc","$6da4c8ed3074c92b$export$c08559766941f856","$6da4c8ed3074c92b$export$c91255cadecfe081","$6da4c8ed3074c92b$export$a1cfd206661d0801","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","$6da4c8ed3074c92b$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","$6da4c8ed3074c92b$export$72209efa88586d42","intersection","$6da4c8ed3074c92b$export$7b0a31e10bbff018","$6da4c8ed3074c92b$export$6a4fe494c558c238","$6da4c8ed3074c92b$export$a6a5a7a461419425","start","startRel","endRel","startX","startY","endX","endY","slope","$6da4c8ed3074c92b$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","xs","ys","$6da4c8ed3074c92b$var$_boundingExtentXYs","$6da4c8ed3074c92b$export$39a9ce3624977b84","projection","projectionExtent","canWrapX","worldWidth","$2f35615121725455$export$2e2bcd8739ae039","$dab4245bc22b806c$export$2e2bcd8739ae039","$b978dafe8f7d27ff$export$2e2bcd8739ae039","Control","style","pointerEvents","target_","map_","render","setTarget","$b978dafe8f7d27ff$var$__extends","$DfnQm","removeNode","getMap","setMap","map","getOverlayContainerStopEvent","appendChild","$jDfdj","POSTRENDER","mapEvent","document","getElementById","$e4ad75f913b6f7ff$export$2e2bcd8739ae039","MOVESTART","MOVEEND","LOADSTART","LOADEND","$8UoiJ","$075f937d7366f1a2$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","WORKER_OFFSCREEN_CANVAS","OffscreenCanvas","createElement","getContext","$075f937d7366f1a2$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$075f937d7366f1a2$export$1d0aa160432dfea5","node","removeChild","$075f937d7366f1a2$export$1e1c9bf5a4ffe0d1","lastChild","$075f937d7366f1a2$export$caeacfe04f52533a","children","oldChildren","childNodes","oldChild","newChild","insertBefore","$67c66761d21428d0$var$ua","navigator","userAgent","toLowerCase","$67c66761d21428d0$export$8442bdfd18b7b8a6","$67c66761d21428d0$export$39dfd62a25e0fe93","match","$67c66761d21428d0$export$76c0a3b101d93136","$67c66761d21428d0$export$6b83a0446fc26f94","devicePixelRatio","$67c66761d21428d0$export$98fcef3dc9973292","WorkerGlobalScope","self","$67c66761d21428d0$export$716f8695eedb9bad","Image","decode","$67c66761d21428d0$export$f751ce96c6c4e4fc","passive","defineProperty","window","error","$e22e7611e69f42a9$var$transformStringDiv","$e22e7611e69f42a9$export$adaa4cf7ef1b65be","transform","c","d","e","$e22e7611e69f42a9$export$5635d7ef4b8fee1c","$e22e7611e69f42a9$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","$e22e7611e69f42a9$export$bd70ea2a93c0fa4","det","$e22e7611e69f42a9$export$f84e8e69fd4488a5","transformString","join","$322346e1ff7894ca$var$HEX_COLOR_RE_","$322346e1ff7894ca$var$NAMED_COLOR_RE_","$322346e1ff7894ca$export$590567be997858b6","color","$322346e1ff7894ca$export$f84e8e69fd4488a5","$322346e1ff7894ca$var$fromNamed","el","body","rgb","getComputedStyle","cache","cacheSize","$322346e1ff7894ca$export$3004f64547af360e","s","g","exec","hasAlpha","parseInt","substr","$322346e1ff7894ca$export$a3295358bff77e","Number","$322346e1ff7894ca$var$fromStringInternal_","$322346e1ff7894ca$export$75093a47a9fa838d","$f351daabfe6e2d22$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","src","crossOrigin","$f351daabfe6e2d22$var$getKey","setSize","maxCacheSize","$f351daabfe6e2d22$export$747ccdf771a87ab8","$f5e92a4d985a2824$export$2e2bcd8739ae039","$534f30fce11effcd$export$acb1e9cb9ce4ca56","viewState","zoom","$534f30fce11effcd$export$2e2bcd8739ae039","Layer","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","rendered","handleSourcePropertyChange_","setSource","$534f30fce11effcd$var$__extends","getSource","getRenderSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","getMapInternal","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$1bd0a226f9a16141$export$e9bab7fafb253603","coordinate1","coordinate2","$1bd0a226f9a16141$export$bb628a54ab399bc9","cosAngle","sinAngle","$1bd0a226f9a16141$export$39a9ce3624977b84","getWidth","worldsAway","$1bd0a226f9a16141$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","sourceExtentWidth","$b370ab32454a96fd$var$expireIconCache","$b370ab32454a96fd$export$2e2bcd8739ae039","MapRenderer","$b370ab32454a96fd$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","feature","geometry","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","i1","layer1","$534f30fce11effcd$exports","inView","getWrapX","callback_1","order","distanceSq","sort","forEachLayerAtPixel","hasFeatureAtCoordinate","TRUE","scheduleExpireIconCache","postRenderFunctions","$b80dddceb0c42ad4$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$b80dddceb0c42ad4$var$__extends","$ce07df6d5d4656f1$export$981241db82723ce2","$ce07df6d5d4656f1$export$1afde3d6e16a7b29","$ce07df6d5d4656f1$export$4d4f8be70b656192","$ce07df6d5d4656f1$export$e16017ac68d14492","$ce07df6d5d4656f1$var$fontRegEx","RegExp","$ce07df6d5d4656f1$var$fontRegExMatchIndex","$ce07df6d5d4656f1$export$5abde8a6aec4a131","fontSpec","lineHeight","weight","variant","families","family","$ce07df6d5d4656f1$export$52ec625a6a53b6a6","$d4aabc5c971073f1$export$3847dfea4f8d4dfa","$d4aabc5c971073f1$export$c495d52ee3fd74b2","$d4aabc5c971073f1$export$17bd0c38d6ae694e","$d4aabc5c971073f1$export$e21b4112fdc612fc","$d4aabc5c971073f1$export$365eb9648cf19bd0","$d4aabc5c971073f1$export$1eb2eaecacf2031e","$d4aabc5c971073f1$export$94d53b95641b5766","$d4aabc5c971073f1$export$cf2279a1bff62eb","$d4aabc5c971073f1$export$40a9eeef55665a40","$d4aabc5c971073f1$export$1d36981fcadac93b","console","warn","$d4aabc5c971073f1$var$measureFont","measureElement","$d4aabc5c971073f1$var$measureContext","$d4aabc5c971073f1$export$7fdcec604f0b1fa7","$d4aabc5c971073f1$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$d4aabc5c971073f1$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","setInterval","$d4aabc5c971073f1$export$4feaf6852ff92513","metrics","$d4aabc5c971073f1$var$measureText","isNaN","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","createCanvasContext2D","measureText","$d4aabc5c971073f1$export$915c7ba51467308f","$d4aabc5c971073f1$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","w","h","scale","save","globalAlpha","setTransform","contextInstructions","translate","label","$d4aabc5c971073f1$var$executeLabelInstructions","drawImage","restore","$fa78c97693b12120$export$2e2bcd8739ae039","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","firstChild","children_","renderedVisible_","$fa78c97693b12120$var$__extends","event_1","$b80dddceb0c42ad4$exports","declutterLayers","previousElement","layerIndex","sourceState","renderDeclutter","replaceChildren","getDataAtPixel","$b370ab32454a96fd$exports","$3a171922c3a0c5ed$export$2e2bcd8739ae039","MapEvent","$3a171922c3a0c5ed$var$__extends","$a1b91f073c6a6c43$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$a1b91f073c6a6c43$var$__extends","getEventPixel","getCoordinateFromPixel","$3a171922c3a0c5ed$exports","$150f412a4a7fa263$export$2e2bcd8739ae039","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$d564567e31203d44$export$2e2bcd8739ae039","$6085d006f9d0efe2$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","PASSIVE_EVENT_LISTENERS","$6085d006f9d0efe2$var$__extends","emulateClick_","pointerEvent","newEvent1","$a1b91f073c6a6c43$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$07fa325567004bb7$export$2e2bcd8739ae039","$716c6804ea170b71$export$b4af72c40fd57063","$716c6804ea170b71$export$2e2bcd8739ae039","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$b8291d9739c3c64e$export$2e2bcd8739ae039","$4c51fd53052a6bbc$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$4c51fd53052a6bbc$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$4c51fd53052a6bbc$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","sqrt","$419865bd7211e6e7$export$2e2bcd8739ae039","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","$03edbd434a9e6608$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$03edbd434a9e6608$export$1482081eec883108","$03edbd434a9e6608$export$2e2bcd8739ae039","$7d362782b4ccb93d$export$2e2bcd8739ae039","$d35baefbe89be4c5$export$2e2bcd8739ae039","CENTER","RESOLUTION","ROTATION","$57cd8651d88957a0$export$e98a216cdcc847dc","$57cd8651d88957a0$export$6b8cb5cd370bd90c","$6dc418afeec7068a$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$84ad988f04807ab1$export$2d2c9be8b5b863f","$84ad988f04807ab1$export$f3928063e5e96d35","$84ad988f04807ab1$export$21e6da8a7375dfe8","$84ad988f04807ab1$export$ae9d6ed80df710e5","$84ad988f04807ab1$export$d26945d1ad52feeb","tan","$84ad988f04807ab1$var$EPSG3857Projection","EPSG3857Projection","point","$84ad988f04807ab1$var$__extends","$84ad988f04807ab1$export$b508d7ad9a891c1b","$84ad988f04807ab1$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$84ad988f04807ab1$export$8c71322ec28ed6b4","atan","$b58ae362632b32c5$export$21e6da8a7375dfe8","$b58ae362632b32c5$export$1482081eec883108","$b58ae362632b32c5$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$b58ae362632b32c5$var$__extends","$b58ae362632b32c5$export$b508d7ad9a891c1b","$f5ec5c943d804ecb$var$cache","$11b5dd198626e1de$var$transforms","$11b5dd198626e1de$export$e16d8520af44a096","destination","sourceCode","destinationCode","$fb75384508533d8f$export$63f2df7bd7371262","$fb75384508533d8f$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","toRadians","lat2","deltaLatBy2","deltaLonBy2","atan2","$fb75384508533d8f$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","lon","toDegrees","$9c4744460e43e41b$var$showCoordinateWarning","$9c4744460e43e41b$export$ed949affbc7c4223","opt_disable","$9c4744460e43e41b$export$dd516654c5f598fb","$9c4744460e43e41b$export$83e8ab53904f8022","$9c4744460e43e41b$export$59ae956cd3e343f7","$f5ec5c943d804ecb$export$e16d8520af44a096","$9c4744460e43e41b$export$3988ae62b71be9a3","projectionLike","replace","$9c4744460e43e41b$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$9c4744460e43e41b$export$e3c4995a701c26a3","vertices","$9c4744460e43e41b$export$eeb8392580a05a37","projections","$9c4744460e43e41b$export$638ad73f7aafb913","$9c4744460e43e41b$export$549167224996a0fb","defaultCode","$9c4744460e43e41b$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$11b5dd198626e1de$export$3988ae62b71be9a3","$9c4744460e43e41b$export$fce0c6cfca85ed96","$9c4744460e43e41b$export$51186ad6e864892a","$9c4744460e43e41b$export$751c68e0e0efff79","applyTransform","projections2","forwardTransform","inverseTransform","$9c4744460e43e41b$var$userProjection","$9c4744460e43e41b$export$3973b77d5f6f2790","$9c4744460e43e41b$export$698f563af1ba02a5","$9c4744460e43e41b$export$d4b8ec0b96db1ee2","destProjection","$9c4744460e43e41b$export$96bfd09e2cffb006","$9c4744460e43e41b$export$494be3a3a25689ca","$9c4744460e43e41b$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$84ad988f04807ab1$exports","PROJECTIONS","$b58ae362632b32c5$exports","fromEPSG4326","toEPSG4326","$b21a6e049949bb31$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$b21a6e049949bb31$export$f883a24d5edde77c","$bac43a1f4a628548$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getHeight","$bac43a1f4a628548$var$getSmoothClampedResolution","$bac43a1f4a628548$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$d65f0a322291d127$export$e20fbacbb41798b","$d65f0a322291d127$export$f883a24d5edde77c","$c7ccf7e681a9b333$export$929e5a82286172a6","$c7ccf7e681a9b333$export$57636bb43b1ccbb0","$c7ccf7e681a9b333$export$9b47139b511b56e4","$c7ccf7e681a9b333$export$45db2fc2f15997e7","$42282ac5c8474df1$export$2e2bcd8739ae039","XY","XYZ","XYM","XYZM","$14c6e714516e527b$export$b92b2dedcfff79de","opt_dest","dest","$14c6e714516e527b$export$bb628a54ab399bc9","anchor","anchorX","anchorY","$50db89a00eb954f6$var$tmpTransform","$50db89a00eb954f6$export$2e2bcd8739ae039","Geometry","createEmpty","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","memoizeOne","revision","squaredTolerance","opt_transform","getSimplifiedGeometry","clone","$50db89a00eb954f6$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","createOrUpdateEmpty","returnOrUpdate","rotate","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$c76e993e57efc8c4$export$6af0c1b4a8549a43","layout","$c76e993e57efc8c4$export$a3767472617c7861","simpleGeometry","getFlatCoordinates","getStride","$c76e993e57efc8c4$export$2e2bcd8739ae039","SimpleGeometry","$c76e993e57efc8c4$var$__extends","createOrUpdateFromFlatCoordinates","getCoordinates","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","setFlatCoordinates","setCoordinates","opt_layout","setLayout","nesting","$c76e993e57efc8c4$var$getLayoutForStride","getCenter","$14c6e714516e527b$export$dcdf75081b88279d","$14c6e714516e527b$export$d73ee8ef04f5226a","$50db89a00eb954f6$exports","$bf5604c1b8258b71$var$assignClosest","offset1","offset2","lerp","$bf5604c1b8258b71$export$bc2eb611ddf80103","squaredDelta","squaredDistance","$bf5604c1b8258b71$export$fbf31c8f2668ed5a","ends","$bf5604c1b8258b71$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","tmpPoint","$bf5604c1b8258b71$export$5a48a0eefcf14992","$6b086aa46281540d$export$5c4daf67e03c190f","$6b086aa46281540d$export$47c3746a74384d45","coordinatess","opt_ends","jj","$8780aae6970f5f65$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","squaredSegmentDistance","$8780aae6970f5f65$export$cedb9900c0b225c2","simplifiedEnds","$8780aae6970f5f65$export$51a0620f7a28532b","$8780aae6970f5f65$export$b84e8d2c4920a0c6","$8780aae6970f5f65$export$60a9904b67f8d51b","$5454470599558ddd$export$9c0934e4e9c3f61e","opt_coordinates","$5454470599558ddd$export$cbb9596fc0f40db2","opt_coordinatess","$5454470599558ddd$export$915c7058aeb4dfeb","endss","opt_coordinatesss","coordinatesss","$01ff26a2f986a1d0$export$3c5e1905f889266e","twiceArea","$01ff26a2f986a1d0$export$7a8ee541dfdf2ed5","$548636579b4087f2$export$2e2bcd8739ae039","LinearRing","maxDelta_","maxDeltaRevision_","$548636579b4087f2$var$__extends","closestSquaredDistanceXY","getArea","$c76e993e57efc8c4$exports","$6eced4c969949f6b$export$2e2bcd8739ae039","Point","$6eced4c969949f6b$var$__extends","createOrUpdateFromCoordinate","$6b086aa46281540d$export$60815ead40ec79ab","$239aa88e7a573859$export$cedabedc7ac0e138","forEachCorner","$239aa88e7a573859$export$949a7a3a4b6f34fa","wn","$239aa88e7a573859$export$ae868c0f6acc3355","$2166f19777f69377$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","numberSafeCompareFunction","segmentLength","$3e64078bffae1cbd$export$4b80e395e36b5a56","ret","$acee589e5b390c5c$export$40d8d71841a3d779","coordinatesExtent","extendFlatCoordinates","intersects","containsExtent","point1","point2","intersectsSegment","$acee589e5b390c5c$export$76dcd8f8f83b6ddb","$acee589e5b390c5c$export$830a0dafbb2ef1c5","$155dc783a4ec227e$export$741858880c96b18c","$7892dc06ffd23218$export$318f2842ed17e094","edge","$7892dc06ffd23218$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$7892dc06ffd23218$export$b71b604ddfc778c7","$7892dc06ffd23218$export$ea9ed55fc2a85010","$40aa8d43bbe572bf$var$Polygon","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$40aa8d43bbe572bf$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","$6eced4c969949f6b$exports","getLinearRingCount","getLinearRing","$548636579b4087f2$exports","getLinearRings","linearRings","$40aa8d43bbe572bf$export$2e2bcd8739ae039","$40aa8d43bbe572bf$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$40aa8d43bbe572bf$export$c16b671815801c75","$40aa8d43bbe572bf$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","arrayLength","$40aa8d43bbe572bf$export$87d6a1539a56e47f","getRadius","startAngle","modulo","$70364d0195659942$var$DEFAULT_MIN_ZOOM","$70364d0195659942$var$animationCallback","returnValue","$70364d0195659942$export$964345001ee9ac52","smoothExtentConstraint","constrainOnlyCenter","multiWorld","$70364d0195659942$export$c68d65f9148da196","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","resolutions","constrainResolution","capped","z","linearFindNearest","$bac43a1f4a628548$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","power","opt_minResolution","minZoomLevel","cappedZoomLevel","zoomLevel","newResolution","$bac43a1f4a628548$export$22ac0f6b219de91a","constraint","$70364d0195659942$export$4eeaa08dd550e3c0","theta","opt_tolerance","enableRotation","constrainRotation","$70364d0195659942$export$ee75376562060184","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","$70364d0195659942$var$calculateCenterOn","rotX","rotY","$70364d0195659942$export$2e2bcd8739ae039","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$70364d0195659942$var$__extends","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","minZoom_","centerConstraint","rotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","setZoom","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getForViewAndSize","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","$40aa8d43bbe572bf$exports","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","$cc435a5409103773$export$622c471beb1693c7","$cc435a5409103773$export$a71a825ff42fb8e1","$cceb59c4bc2a46b0$var$removeLayerMapProperty","$YSU3I","$cceb59c4bc2a46b0$var$setLayerMapProperty","$cceb59c4bc2a46b0$export$2e2bcd8739ae039","PluggableMap","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","view","$70364d0195659942$exports","$cceb59c4bc2a46b0$var$createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","DEVICE_PIXEL_RATIO","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","$4c51fd53052a6bbc$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","getId","toString","control","interaction","$cceb59c4bc2a46b0$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","getLoadingOrNotReady","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$6085d006f9d0efe2$exports","defaultView","updateSize","handleViewPropertyChanged_","updateViewportSize_","GroupEvent","handleLayerRemove_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","offsetWidth","parseFloat","getClientRects","$6a26ab11104d2c24$export$2e2bcd8739ae039","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$6a26ab11104d2c24$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","removeChildren","handleToggle_","classList","toggle","replaceNode","getCollapsible","setCollapsed","getCollapsed","$fVglf","$a305cff1f91b3b86$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$a305cff1f91b3b86$var$__extends","resetNorth_","$4901e3e27e30416a$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$4901e3e27e30416a$var$__extends","zoomByDelta_","currentZoom","newZoom","$2c9e42723ccf2bfb$export$2e2bcd8739ae039","$39210df8527e63e5$export$4c486572e961a974","$39210df8527e63e5$export$ace321ff2a8016ef","$39210df8527e63e5$export$2e2bcd8739ae039","Interaction","setActive","$39210df8527e63e5$var$__extends","active","$b50403621294a654$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$b50403621294a654$var$__extends","stopEvent","shiftKey","$39210df8527e63e5$exports","zoomByDelta","$cf1eb502962d87a8$export$e2a20c553f6c85ce","$cf1eb502962d87a8$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$cf1eb502962d87a8$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$cf1eb502962d87a8$var$isPointerDraggingEvent","getValues","$edf87b50170125f7$export$84bf76cd7afc7469","conditions","pass","$edf87b50170125f7$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$edf87b50170125f7$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$edf87b50170125f7$export$d7ddd398f22d79ef","$edf87b50170125f7$export$ba9e5d519bc326ca","$edf87b50170125f7$export$1238ad6b5e7fff70","WEBKIT","MAC","$edf87b50170125f7$export$fdc892d0d8fe3bfb","FALSE","$edf87b50170125f7$export$5d31fe68a477cfbb","$edf87b50170125f7$export$e5570ca80cd8fd54","tagName","$edf87b50170125f7$export$abb7acbfa76bf3c4","pointerType","$edf87b50170125f7$export$189f0d593022b199","isPrimary","$c11585da26a016db$var$DragPan","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$c11585da26a016db$var$__extends","centroid","$cf1eb502962d87a8$exports","update","$1bd0a226f9a16141$export$dcdf75081b88279d","getDistance","getAngle","centerpx","$c11585da26a016db$export$2e2bcd8739ae039","$197c7092261b2aa0$export$2e2bcd8739ae039","DragRotate","lastAngle_","$197c7092261b2aa0$var$__extends","$c47adf75308683a6$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$c47adf75308683a6$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","getGeometry","$e05f414bc3918235$var$DragBoxEventType","$e05f414bc3918235$export$7053c33c051365ea","$e05f414bc3918235$var$__extends","$e05f414bc3918235$export$2e2bcd8739ae039","DragBox","box_","$c47adf75308683a6$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$afc7f51010a5b660$export$2e2bcd8739ae039","DragZoom","out_","out","$afc7f51010a5b660$var$__extends","$e05f414bc3918235$exports","$82662515908d12f9$export$2e2bcd8739ae039","$178bb1517d626802$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$178bb1517d626802$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$2237fabfa170eefc$export$2e2bcd8739ae039","KeyboardZoom","$2237fabfa170eefc$var$__extends","charCode","charCodeAt","$9a54ea8d5f7a49ee$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$aaa378764710d71e$export$9484bbecc3c49a2e","TRACKPAD","$aaa378764710d71e$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$aaa378764710d71e$var$__extends","endInteraction_","wheelEvent","FIREFOX","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$9727451f2459496c$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$9727451f2459496c$var$__extends","rotationDelta","touch0","touch1","$79c946b60b88d4a6$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$79c946b60b88d4a6$var$__extends","scaleDelta","$41aa29ae0c4b607a$export$2e2bcd8739ae039","Map","$4901e3e27e30416a$exports","zoomOptions","$a305cff1f91b3b86$exports","rotateOptions","attribution","$6a26ab11104d2c24$exports","attributionOptions","$b4471d80e1d69273$export$ebe90cb607ad99e","altShiftDragRotate","$197c7092261b2aa0$exports","doubleClickZoom","$b50403621294a654$exports","zoomDelta","zoomDuration","dragPan","$c11585da26a016db$exports","pinchRotate","$9727451f2459496c$exports","pinchZoom","$79c946b60b88d4a6$exports","keyboard","$178bb1517d626802$exports","$2237fabfa170eefc$exports","mouseWheelZoom","$aaa378764710d71e$exports","shiftDragZoom","$afc7f51010a5b660$exports","$fdc8b40501c0cf45$export$ebe90cb607ad99e","$41aa29ae0c4b607a$var$__extends","$fa78c97693b12120$exports","$cceb59c4bc2a46b0$exports","$351df830ee0a9d9c$export$2e2bcd8739ae039","BaseImageLayer","$351df830ee0a9d9c$var$__extends","$7eb75c96a6b6f2c6$export$2e2bcd8739ae039","$cb18cdefd702a327$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$cb18cdefd702a327$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","renderIfReadyAndVisible","loadImage","image","imageState","$42152f52b26b6ca7$var$pixelContext","$42152f52b26b6ca7$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","$42152f52b26b6ca7$var$__extends","getImageData","col","row","clearRect","err","useContainer","opt_backgroundColor","layerClassName","backgroundColor","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","getTopLeft","topRight","getTopRight","bottomRight","getBottomRight","bottomLeft","getBottomLeft","inverted","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","renderCoordinate","containsCoordinate","pixelContext","pixelCanvas","Uint8Array","$cb18cdefd702a327$exports","$fa21ebc07613627d$export$ab6c91696bd3263e","imageSmoothingEnabled","msImageSmoothingEnabled","$fa21ebc07613627d$export$75f39f0ce198f93f","$d08a3a38b8c630d8$export$2e2bcd8739ae039","CanvasImageLayerRenderer","imageLayer","image_","$d08a3a38b8c630d8$var$__extends","getImage","viewResolution","imageSource","renderedExtent","imageExtent","img","imageMapWidth","imageMapHeight","imageResolution","imagePixelRatio","getPixelRatio","viewCenter","size_1","canvasTransform","clipped","dw","dh","getInterpolate","previousAlpha","$42152f52b26b6ca7$exports","$14618f63634d34fc$export$2e2bcd8739ae039","ImageLayer","$14618f63634d34fc$var$__extends","$d08a3a38b8c630d8$exports","$351df830ee0a9d9c$exports","$e4c61536de922b84$export$2e2bcd8739ae039","$93be2de6a052f587$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$93be2de6a052f587$var$__extends","getPreload","getUseInterimTilesOnError","$0f235d2d04095c6e$export$2e2bcd8739ae039","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","$0f235d2d04095c6e$var$__extends","release","getInterimTile","refreshInterimChain","getTileCoord","setState","getAlpha","inTransition","endTransition","$5edd00bd92be9cf8$export$2e2bcd8739ae039","ImageBase","$5edd00bd92be9cf8$var$__extends","$b54439be79d4619a$export$bc96ecc7c2a50764","loadHandler","errorHandler","listening","decoding","loaded","IMAGE_DECODE","catch","$b54439be79d4619a$export$2e2bcd8739ae039","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$b54439be79d4619a$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","setImage","$5edd00bd92be9cf8$exports","$cd3bc8d185522361$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","crossOrigin_","tileLoadFunction_","$cd3bc8d185522361$var$__extends","ctx","fillStyle","fillRect","naturalWidth","naturalHeight","$b54439be79d4619a$exports","listenImage","$0f235d2d04095c6e$exports","$2b0a118af78fb031$var$brokenDiagonalRendering_","$6be53f6edfbf1854$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","boundingExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","extendCoordinate","getTriangles","$2b0a118af78fb031$var$drawTestTriangle","u1","v1","u2","v2","closePath","$2b0a118af78fb031$var$verifyBrokenDiagonalRendering","$2b0a118af78fb031$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$2b0a118af78fb031$export$b3890eb0ae9dca99","triangulation","sources","gutter","opt_renderEdges","opt_interpolate","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","solveLinearSystem","$2b0a118af78fb031$var$isBrokenDiagonalRendering","ud","vd","step","steps","strokeStyle","lineWidth","stroke","$398e350e33050c07$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$2b0a118af78fb031$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","$398e350e33050c07$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$550e524b0d1b61d4$var$TileRange","TileRange","containsTileRange","$550e524b0d1b61d4$export$958e3e1a02eac4b6","$550e524b0d1b61d4$export$2e2bcd8739ae039","$02fffef185f4339b$export$2e2bcd8739ae039","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$02fffef185f4339b$var$__extends","isDrawableTile","tileState","getTile","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","$cd3bc8d185522361$exports","$398e350e33050c07$exports","tileOrigin","getOrigin","tileSize","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","originTileExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","frameState1","tileSource1","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$32e67a4d3559554a$export$2e2bcd8739ae039","TileLayer","$32e67a4d3559554a$var$__extends","$02fffef185f4339b$exports","$93be2de6a052f587$exports","$859b1614288c6316$export$2e2bcd8739ae039","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","$bf2a04496fadabc6$export$958e3e1a02eac4b6","opt_tileCoord","$bf2a04496fadabc6$export$92d0df0f1d25c63c","$bf2a04496fadabc6$export$a47fb462a08de82f","$a12e09565a34db59$export$2e2bcd8739ae039","TileCache","$a12e09565a34db59$var$__extends","pruneExceptNewestZ","$bf2a04496fadabc6$export$a807b7874eb66454","$7e3d7a0f8b272861$export$2e2bcd8739ae039","$ed6dc99f268f3882$var$adaptAttributions","attributionLike","$ed6dc99f268f3882$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","interpolate_","viewResolver","viewRejector","viewPromise_","reject","$ed6dc99f268f3882$var$__extends","refresh","setAttributions","$bb602a307ef98bb5$var$tmpTileCoord","$bb602a307ef98bb5$export$2e2bcd8739ae039","TileGrid","isSorted","origins","origin_","origin","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","createOrUpdate","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","fullTileRanges","$5779655d81caea04$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$5779655d81caea04$export$7b5b6ef8fd55fac4","$5779655d81caea04$var$resolutionsFromExtent","getCorner","$5779655d81caea04$export$ce88871416242df8","$5779655d81caea04$export$a251b12f5601c16f","opt_maxResolution","half","$988a11d09320f6a8$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$a12e09565a34db59$exports","tmpSize","tileOptions","$988a11d09320f6a8$var$__extends","getTileCacheForProjection","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","$5779655d81caea04$export$39a9ce3624977b84","$bf2a04496fadabc6$export$60bedf8e3e3c3dbe","$ed6dc99f268f3882$exports","$988a11d09320f6a8$export$c571855c51e6c4b6","$988a11d09320f6a8$export$2e2bcd8739ae039","$91dd08a0f5859882$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","$91dd08a0f5859882$export$436f44dbcc31fea3","templates","tileUrlFunctions","$bf2a04496fadabc6$export$d6af199866bfb566","$91dd08a0f5859882$export$4229b1d9af69b3be","$e6408236331c2614$export$2e2bcd8739ae039","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","$e6408236331c2614$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$988a11d09320f6a8$exports","TileSourceEvent","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","fromCharCode","stop_1","$91dd08a0f5859882$export$2a1fa079bfd73dde","$51d055913ca55b5e$var$TileImage","TileImage","imageSmoothing","$51d055913ca55b5e$var$defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","$51d055913ca55b5e$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$e6408236331c2614$exports","imageTile","$51d055913ca55b5e$export$2e2bcd8739ae039","$963a7ef65488964c$export$2e2bcd8739ae039","xyzOptions","gridOptions","$5779655d81caea04$export$38500bbeccc864ff","$963a7ef65488964c$var$__extends","$51d055913ca55b5e$exports","$6c8498cc816f2362$export$4de8a5e77eb994ad","$6c8498cc816f2362$export$2e2bcd8739ae039","OSM","$6c8498cc816f2362$var$__extends","$963a7ef65488964c$exports","$1dd040dde677fb20$export$8c33e4eedb20eeb5","$22666d8766dd8ace$export$2e2bcd8739ae039","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","$22666d8766dd8ace$var$__extends","unlistenSource_","sourceState1","$ff537d321d4e1584$export$4e0f6da20e5dcc4f","IMAGELOADSTART","IMAGELOADEND","IMAGELOADERROR","$ff537d321d4e1584$export$58d3276cd83daede","$ff537d321d4e1584$var$__extends","$ff537d321d4e1584$export$584f102f75ff44b3","$ff537d321d4e1584$export$2e2bcd8739ae039","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","idx","resolution1","$22666d8766dd8ace$exports","getImageInternal","handleImageChange","$3756c58836984030$export$2e2bcd8739ae039","$60db182c0252e220$export$c202e3cb8db99a95","uri","params","keyParams","encodeURIComponent","qs","$481c7fd2f8a9fd17$var$GETFEATUREINFO_IMAGE_SIZE","$481c7fd2f8a9fd17$export$2e2bcd8739ae039","ImageWMS","url_","$ff537d321d4e1584$exports","defaultImageLoadFunction","params_","v13_","updateV13_","serverType_","serverType","hidpi_","hidpi","imageSize_","renderedRevision_","ratio_","$481c7fd2f8a9fd17$var$__extends","getFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getLegendUrl","LAYERS","mpu","getParams","viewExtent","requestWidth","requestHeight","requestExtent","getImageLoadFunction","dpi","bbox","getUrl","setImageLoadFunction","updateParams","version","s1","s2","n1","n2","$ff7180bdd45ebb19$export$66e1c0999abad646","$06593976e64c4282$exports","ol_Observable","CSS_PREFIX","LayerSwitcher","constructor","super","activationMode","startActive","collapseTipLabel","groupSelectStyle","getGroupSelectStyle","mapListeners","hiddenClassName","isTouchDevice_","shownClassName","panel","enableTouchScroll_","onclick","hidePanel","showPanel","onmouseover","onmouseout","relatedTarget","updateButton","unByKey","renderPanel","render_event","Event","ensureTopVisibleBaseLayerShown","forEachRecursive","_idx","_a","setGroupVisibility","setChildVisibility","ul","renderLayers_","_changedLyr","rendercomplete_event","isBaseGroup","grp","lyrs","getGroupsAndLayers","descendantVisibility","v","groupVisible","groupIndeterminate","lastVisibleBaseLyr","lyr","_arr","setVisible_","filterFn","_lyr","renderLayer_","li","lyrTitle","checkboxId","uuid","btn","toggleFold_","checked","indeterminate","onchange","htmlFor","rsl","elm","lyr1","random","scrollStartPos","scrollTop","touches","pageY","createEvent","factory","$176ca75ee9f69668$exports","t1","t2","r2","e2","a2","h2","o","u","p","r1","_maxEntries","_minEntries","e1","a1","h1","p1","o1","leaf","l1","f1","m1","d1","all","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","M","_allDistMargin","$e60011aea38e6239$export$2e2bcd8739ae039","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getHitDetectionImage","getImageState","getImageSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$e0807f400ec9a0a9$export$dc5b1400ac3a10a8","$3e99c452138b2224$export$2e2bcd8739ae039","RegularShape","hitDetectionCanvas_","fill_","fill","points","radius_","radius1","radius2_","radius2","stroke_","size_","renderOptions_","$3e99c452138b2224$var$__extends","getFill","getPoints","getRadius2","getStroke","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","setLineDash","drawHitDetectionCanvas_","arc","angle0","radiusC","$06150d8570b7481b$export$2e2bcd8739ae039","CircleStyle","$06150d8570b7481b$var$__extends","setRadius","$3e99c452138b2224$exports","$d61d1dcaf3c44610$export$2e2bcd8739ae039","Fill","color_","setColor","$f9d0329c5c745263$export$2e2bcd8739ae039","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$8c7f6dda98e8cb9c$var$Style","Style","geometryFunction_","$8c7f6dda98e8cb9c$var$defaultGeometryFunction","setGeometry","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setStroke","setText","$8c7f6dda98e8cb9c$var$defaultStyles","$8c7f6dda98e8cb9c$export$6865c5ac2f5ce8b6","$06150d8570b7481b$exports","$c8d6dc4c09ed9916$var$Property","$c8d6dc4c09ed9916$export$2e2bcd8739ae039","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","$c8d6dc4c09ed9916$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","$parcel$interopDefault","setRenderOrder","renderOrder","opt_style","styleFunction","styles_1","$8c7f6dda98e8cb9c$export$c314ea3f6b164147","$cf547866e052f25b$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$cf547866e052f25b$export$f21891651e408226","$cf547866e052f25b$export$7a98aa5364d62ba8","$cf547866e052f25b$export$9f746cc58a899a00","$cf547866e052f25b$export$89b10f327e413e71","$cf547866e052f25b$export$2e2bcd8739ae039","$eb0e5c3938110b4c$export$2e2bcd8739ae039","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$2bb20f8873deb436$export$2e2bcd8739ae039","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$2bb20f8873deb436$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","coordinateRelationship","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","reverseSubArray","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","buffer","$b652f9dd73b29cfe$export$2e2bcd8739ae039","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$b652f9dd73b29cfe$var$__extends","myBegin","opt_sharedData","hitDetectionImage","$2bb20f8873deb436$exports","$a207f23baa5aa2c5$export$2e2bcd8739ae039","CanvasLineStringBuilder","$a207f23baa5aa2c5$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$7d2e8ba11a45ae8a$export$2e2bcd8739ae039","CanvasPolygonBuilder","$7d2e8ba11a45ae8a$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$27569314e3df91c2$export$2e2bcd8739ae039","$79529ab61b92f869$export$ed6c897eea07a254","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$8243e906fae47bbe$export$91a016276e4aee96","middle","hanging","alphabetic","ideographic","bottom","$8243e906fae47bbe$export$2e2bcd8739ae039","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$8243e906fae47bbe$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg_1","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$e22658f4b743550b$var$BATCH_CONSTRUCTORS","Circle","$7d2e8ba11a45ae8a$exports","Default","$b652f9dd73b29cfe$exports","LineString","$a207f23baa5aa2c5$exports","Text","$8243e906fae47bbe$exports","$e22658f4b743550b$export$2e2bcd8739ae039","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$e74ccf0666398498$export$2e2bcd8739ae039","DEFAULT","IMAGE","TEXT","$f6421f31729929e6$export$153a9a17ab3e949f","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$bf04349d827c1d16$export$153f8c6b4d8caebc","$6526fa4ee42dc39d$var$tmpExtent","$6526fa4ee42dc39d$var$p1","$6526fa4ee42dc39d$var$p2","$6526fa4ee42dc39d$var$p3","$6526fa4ee42dc39d$var$p4","$6526fa4ee42dc39d$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$6526fa4ee42dc39d$var$rtlRegEx","$6526fa4ee42dc39d$var$horizontalTextAlign","align","test","TEXT_ALIGN","$6526fa4ee42dc39d$var$createTextChunks","acc","line","$6526fa4ee42dc39d$export$2e2bcd8739ae039","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","chunks","reduce","baseStyle","widths","heights","lineWidths","currentWidth","currentHeight","$d4aabc5c971073f1$export$7d7c13020df1e791","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","previousFont","leftRight","strokeInstructions","fillInstructions","lineOffset","widthHeightIndex","lineWidthIndex","text_1","fillStrokeArgs","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$a34a824d875e4ea1$var$ORDER","$a34a824d875e4ea1$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","hitExtent","indexes","$a34a824d875e4ea1$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$a34a824d875e4ea1$export$96fc84ea21b8269f","featureCallback","imageData","result_1","executor","opt_builderTypes","builderTypes","$a34a824d875e4ea1$export$2e2bcd8739ae039","$7b0c2128a27f5020$export$2e2bcd8739ae039","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$7b0c2128a27f5020$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$61c65c2463af340d$export$2e2bcd8739ae039","$546509bca2d85ec0$export$2e2bcd8739ae039","$0e5ad1d3b638689e$var$taintedTestContext","$0e5ad1d3b638689e$var$IconImage","IconImage","imageState_","tainted_","$0e5ad1d3b638689e$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","getSrc","imgData","putImageData","$0e5ad1d3b638689e$export$3988ae62b71be9a3","$8463d325b53eeb0c$export$2e2bcd8739ae039","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","imgSize_","imgSize","iconImage_","$0e5ad1d3b638689e$exports","offset_","offsetOrigin_","offsetOrigin","$8463d325b53eeb0c$var$__extends","setAnchor","iconImageSize","$13dfa0283bf5c35f$export$ab51038298418f25","$4b9ac454600c05d2$var$SIMPLIFY_TOLERANCE","$4b9ac454600c05d2$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","MultiPoint","MultiLineString","MultiPolygon","GeometryCollection","replayGroup","geometryRenderer","circleReplay","$4b9ac454600c05d2$export$531ddd8416d52dfc","feature1","feature2","$4b9ac454600c05d2$export$bdacc5b475012edb","$4b9ac454600c05d2$export$36f470a33a42f413","$4b9ac454600c05d2$var$renderGeometry","$4b9ac454600c05d2$var$renderFeatureInternal","getGeometries","$659e0e97392a5f5e$export$2e2bcd8739ae039","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$659e0e97392a5f5e$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$e22e7611e69f42a9$export$3e4e33ea14aeb531","transforms","$7b0c2128a27f5020$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","styles","originalStyle","imgContext","$8463d325b53eeb0c$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$13dfa0283bf5c35f$export$bd05e394339d469","resultFeatures","$13dfa0283bf5c35f$export$6d4d555ddbfffa32","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","declutterBuilderGroup","userTransform","userExtent_1","loadFeatures","$4b9ac454600c05d2$export$75084a70d324c1e6","dirty","renderFeature","userExtent","getFeaturesInExtent","replayGroupInstructions","getOverlaps","$82a68515bd6ef378$export$2e2bcd8739ae039","VectorLayer","$82a68515bd6ef378$var$__extends","$659e0e97392a5f5e$exports","$c8d6dc4c09ed9916$exports","$34c742891733e7a4$export$2e2bcd8739ae039","RBush","opt_maxEntries","rbush_","items_","extents","items","getAll","getInExtent","forEach_","forEachInExtent","rbush","$ccc4e6f11f11978f$export$2e2bcd8739ae039","$eb51d0a16123ee90$export$84bf76cd7afc7469","$fdcc6dd70a9488b9$export$2e2bcd8739ae039","ARRAY_BUFFER","JSON","XML","$588823c001569193$var$withCredentials","$588823c001569193$export$14cc81df70b6707e","format","success","failure","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","readFeatures","featureProjection","readProjection","onerror","send","$588823c001569193$export$441d7b57adab24d0","dataProjection","addFeatures","$84888e4daf3fdf44$export$d402fd02dc2b661c","opt_feature","opt_features","$84888e4daf3fdf44$var$__extends","$84888e4daf3fdf44$export$2e2bcd8739ae039","VectorSource","loader_","format_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_1","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","featureChangeKeys","removed","setLoader","$9fd014ab6df63665$export$bb06ddfd5d66e02e","$9fd014ab6df63665$export$2e2bcd8739ae039","Feature","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","$9fd014ab6df63665$var$__extends","setGeometryName","getGeometryName","handleGeometryChange_","setId","$0e4f3959219eede5$var$cloneGeometries","clonedGeometries","$0e4f3959219eede5$export$2e2bcd8739ae039","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$0e4f3959219eede5$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","$ec084d0ff9c13a22$export$2e2bcd8739ae039","FeatureFormat","defaultFeatureProjection","supportedMediaTypes","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","$ec084d0ff9c13a22$export$7beeea566b560d4","write","transformed","power_1","$2f9f6f6b6e1ba437$var$getObject","parse","$2f9f6f6b6e1ba437$export$2e2bcd8739ae039","JSONFeature","$2f9f6f6b6e1ba437$var$__extends","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","$43ed5485a1d0c509$export$687ff82efd78795b","cumulativeLengths","binarySearch","$43ed5485a1d0c509$export$8f44c3c220ef6f09","extrapolate","lo","hi","m0","$292e4002746c8223$export$2e2bcd8739ae039","flatMidpoint_","flatMidpointRevision_","$292e4002746c8223$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","$b4c0e2e13beea46e$export$2e2bcd8739ae039","lineStrings","$b4c0e2e13beea46e$var$__extends","appendLineString","multiLineString","$43ed5485a1d0c509$export$6a3300857e9ef453","getLineString","$292e4002746c8223$exports","getLineStrings","midpoints","midpoint","$acee589e5b390c5c$export$fdb1d8e850bf7937","$e6080c63a9451eda$export$2e2bcd8739ae039","$e6080c63a9451eda$var$__extends","appendPoint","multiPoint","getPoint","$f73f35eb6af8b987$export$2e2bcd8739ae039","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$f73f35eb6af8b987$var$__extends","appendPolygon","newEndss","multiPolygon","$bf5604c1b8258b71$export$37c18e6e7d50501a","$bf5604c1b8258b71$export$60e067685eb8f9c4","$239aa88e7a573859$export$c760d9d16cf92043","$01ff26a2f986a1d0$export$78e139679ca7205","$9825fadaf3b68c4e$export$78e139679ca7205","$2166f19777f69377$export$11463803eda8a372","getInteriorPoints","$e6080c63a9451eda$exports","$7892dc06ffd23218$export$a1d138f4bd85f4b4","simplifiedEndss","$8780aae6970f5f65$export$b9acf67ef05cd17c","getPolygon","prevEnds","getPolygons","$acee589e5b390c5c$export$77b72fa3792f5bf0","$6b086aa46281540d$export$f9f2bb59da4accd3","lastEnds","$f602cef51a2e6950$var$readGeometry","$f602cef51a2e6950$var$readPointGeometry","$f602cef51a2e6950$var$readLineStringGeometry","$f602cef51a2e6950$var$readPolygonGeometry","$f602cef51a2e6950$var$readMultiPointGeometry","$b4c0e2e13beea46e$exports","$f602cef51a2e6950$var$readMultiLineStringGeometry","$f73f35eb6af8b987$exports","$f602cef51a2e6950$var$readMultiPolygonGeometry","$0e4f3959219eede5$exports","$f602cef51a2e6950$var$readGeometryCollectionGeometry","$f602cef51a2e6950$var$writeGeometry","geoJSON","$f602cef51a2e6950$var$writePointGeometry","$f602cef51a2e6950$var$writeLineStringGeometry","rightHanded","$f602cef51a2e6950$var$writePolygonGeometry","$f602cef51a2e6950$var$writeMultiPointGeometry","$f602cef51a2e6950$var$writeMultiLineStringGeometry","$f602cef51a2e6950$var$writeMultiPolygonGeometry","geometry1","$f602cef51a2e6950$var$writeGeometryCollectionGeometry","$f602cef51a2e6950$export$2e2bcd8739ae039","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","$f602cef51a2e6950$var$__extends","geoJSONFeature","$9fd014ab6df63665$exports","geoJSONFeatures","crs","objects","$2f9f6f6b6e1ba437$exports","$efd3ba4ec2608b1d$var$base_maps","$32e67a4d3559554a$exports","$6c8498cc816f2362$exports","$efd3ba4ec2608b1d$var$ind_dist","$14618f63634d34fc$exports","$481c7fd2f8a9fd17$exports","$efd3ba4ec2608b1d$var$overlays","$efd3ba4ec2608b1d$var$view","$efd3ba4ec2608b1d$var$map","$41aa29ae0c4b607a$exports","$efd3ba4ec2608b1d$var$layerSwitcher","$efd3ba4ec2608b1d$var$vectorLayer","$82a68515bd6ef378$exports","$84888e4daf3fdf44$exports","$f602cef51a2e6950$exports"],"version":3,"file":"index.a19d3fae.js.map"}